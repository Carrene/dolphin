"""empty message

Revision ID: 5f206088190d
Revises: 936c432ce331
Create Date: 2019-06-16 13:00:31.184805

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import orm

from dolphin.models import Item, Issue, IssuePhase


# revision identifiers, used by Alembic.
revision = '5f206088190d'
down_revision = '936c432ce331'
branch_labels = None
depends_on = None


def upgrade():
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'issue_phase',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('phase_id', sa.Integer(), nullable=False),
        sa.Column('issue_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['issue_id'], ['issue.id'], ),
        sa.ForeignKeyConstraint(['phase_id'], ['phase.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.execute(
        "CREATE TYPE issue_stage AS ENUM ('triage', 'backlog', 'working', 'on-hold');"
    )
    op.execute(
        "ALTER TABLE issue ADD stage issue_stage;"
    )
    op.add_column('issue', sa.Column('is_done', sa.Boolean(), nullable=True))
    op.drop_column('issue', 'status')


    op.add_column('item', sa.Column('issue_phase_id', sa.Integer(), nullable=True))
    items = session.query(Item).all()
    for item in items:
        try:
            issue_phase = IssuePhase(
                issue_id=item.issue_id,
                phase_id=item.phase_id,
            )
            session.add(issue_phase)
            session.commit()

        except:
            pass

        item.issue_phase_id = issue_phase.id
        session.commit()

    op.drop_constraint('item_phase_id_issue_id_member_id_key', 'item', type_='unique')
    op.drop_constraint('item_issue_id_fkey', 'item', type_='foreignkey')
    op.drop_constraint('item_phase_id_fkey', 'item', type_='foreignkey')
    op.create_foreign_key(None, 'item', 'issue_phase', ['issue_phase_id'], ['id'])
    op.drop_column('item', '_last_status_change')
    op.drop_column('item', 'phase_id')
    op.drop_column('item', '_status')
    op.drop_column('item', 'issue_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('item', sa.Column('issue_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('item', sa.Column('_status', postgresql.ENUM('in-progress', 'done', name='item_status'), autoincrement=False, nullable=True))
    op.add_column('item', sa.Column('phase_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('item', sa.Column('_last_status_change', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_foreign_key('item_phase_id_fkey', 'item', 'phase', ['phase_id'], ['id'])
    op.create_foreign_key('item_issue_id_fkey', 'item', 'issue', ['issue_id'], ['id'])
    op.create_unique_constraint('item_phase_id_issue_id_member_id_key', 'item', ['phase_id', 'issue_id', 'member_id'])
    op.drop_column('item', 'issue_phase_id')
    op.add_column('issue', sa.Column('status', postgresql.ENUM('to-do', 'in-progress', 'on-hold', 'complete', 'done', name='issues_status'), autoincrement=False, nullable=False))
    op.drop_column('issue', 'stage')
    op.drop_column('issue', 'is_done')
    op.drop_table('issue_phase')
    # ### end Alembic commands ###

